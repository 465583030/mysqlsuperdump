!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Bool	mysqlsuperdump.go	/^type Bool bool$/;"	t
Printf	mysqlsuperdump.go	/^func (b Bool) Printf(s string, a ...interface{}) {$/;"	f
Query	mysqlsuperdump.go	/^func Query(db *sql.DB, q string) (*sql.Rows, error) {$/;"	f
QueryRow	mysqlsuperdump.go	/^func QueryRow(db *sql.DB, q string) *sql.Row {$/;"	f
checkError	mysqlsuperdump.go	/^func checkError(err error) {$/;"	f
configFile	mysqlsuperdump.go	/^var ($/;"	v
debug	mysqlsuperdump.go	/^	verbose            Bool$/;"	v
debugFlag	mysqlsuperdump.go	/^	verboseFlag        = flag.Bool("v", false, "Enable printing status information")$/;"	v
dsn	mysqlsuperdump.go	/^	configFile         string$/;"	v
dumpCreateTable	mysqlsuperdump.go	/^func dumpCreateTable(w io.Writer, db *sql.DB, table string) {$/;"	f
dumpTableData	mysqlsuperdump.go	/^func dumpTableData(w io.Writer, db *sql.DB, table string) {$/;"	f
escape	mysqlsuperdump.go	/^func escape(str string) string {$/;"	f
extendedInsertRows	mysqlsuperdump.go	/^	dsn                string$/;"	v
getColumnListForSelect	mysqlsuperdump.go	/^func getColumnListForSelect(db *sql.DB, table string) string {$/;"	f
getSelectCountQueryFor	mysqlsuperdump.go	/^func getSelectCountQueryFor(db *sql.DB, table string) (query string) {$/;"	f
getSelectQueryFor	mysqlsuperdump.go	/^func getSelectQueryFor(db *sql.DB, table string) (query string) {$/;"	f
getTables	mysqlsuperdump.go	/^func getTables(db *sql.DB) (tables []string) {$/;"	f
main	mysqlsuperdump.go	/^func main() {$/;"	f
main	mysqlsuperdump.go	/^package main$/;"	p
output	mysqlsuperdump.go	/^	selectMap          = make(map[string]map[string]string, 0)$/;"	v
parseCommandLine	mysqlsuperdump.go	/^func parseCommandLine() {$/;"	f
printUsage	mysqlsuperdump.go	/^func printUsage() {$/;"	f
readConfigFile	mysqlsuperdump.go	/^func readConfigFile() {$/;"	f
selectMap	mysqlsuperdump.go	/^	whereMap           = make(map[string]string, 0)$/;"	v
verbose	mysqlsuperdump.go	/^	debugFlag          = flag.Bool("d", false, "Enable printing of debug information")$/;"	v
verboseFlag	mysqlsuperdump.go	/^	output             = flag.String("o", "", "Output path. Default is stdout")$/;"	v
whereMap	mysqlsuperdump.go	/^	extendedInsertRows int$/;"	v
